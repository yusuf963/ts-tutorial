{
  "stats": {
    "suites": 0,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-05T00:06:01.489Z",
    "end": "2023-01-05T00:06:01.492Z",
    "duration": 3,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "76c7419b-1554-416b-a87d-44d4ebdfca25",
      "title": "",
      "fullFile": "",
      "file": "/Users/alchem01/dev/tutorials/ts-tutorial/src/optionalParameters.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Should work with just the first name",
          "fullTitle": "Should work with just the first name",
          "timedOut": false,
          "duration": 1,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const name = getName(\"Matt\");\nexpect(name).to.deep.equal(\"Matt\");",
          "err": {},
          "uuid": "0726a231-c477-414d-9ddc-5cebd09d14b2",
          "parentUUID": "76c7419b-1554-416b-a87d-44d4ebdfca25",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should work with the first and last name",
          "fullTitle": "Should work with the first and last name",
          "timedOut": false,
          "duration": 0,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const name = getName(\"Matt\", \"Pocock\");\nexpect(name).to.deep.equal(\"Matt Pocock\");",
          "err": {},
          "uuid": "b4cc7a50-08be-4ac9-a074-1d5c3094f754",
          "parentUUID": "76c7419b-1554-416b-a87d-44d4ebdfca25",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should work with the first and last name and ..arg",
          "fullTitle": "Should work with the first and last name and ..arg",
          "timedOut": false,
          "duration": 0,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const name = getName(\"Matt\", \"Pocock\", \"a\", \"b\", \"c\");\nassert.equal(name, \"Matt Pocock a,b,c\");",
          "err": {},
          "uuid": "065b0f08-be02-46ab-888c-039ad6d6f38a",
          "parentUUID": "76c7419b-1554-416b-a87d-44d4ebdfca25",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "0726a231-c477-414d-9ddc-5cebd09d14b2",
        "b4cc7a50-08be-4ac9-a074-1d5c3094f754",
        "065b0f08-be02-46ab-888c-039ad6d6f38a"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 1,
      "root": true,
      "rootEmpty": false,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "api-test-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "__test-report__",
        "reportFilename": "api-test-report",
        "reportTitle": "API-Test-Report",
        "inlineAssets": "true"
      },
      "version": "6.2.0"
    }
  }
}